## Voron Design VORON2 250/300/350mm SKR 1.4 TMC2209 UART config

##========================== Pin Definitions ========================
## X_STEP_PIN         2.2
## X_DIR_PIN          2.6
## X_ENABLE_PIN       2.1
## X_STOP_PIN         1.29
## E0_DET_PIN         1.26
## X_UART_PIN         1.10

## Y_STEP_PIN         0.19
## Y_DIR_PIN          0.20
## Y_ENABLE_PIN       2.8
## Y_STOP_PIN         1.28
## E1_DET_PIN         1.26
## Y_UART_RX          1.9

## Z_STEP_PIN         0.22
## Z_DIR_PIN          2.11
## Z_ENABLE_PIN       0.21
## Z_STOP_PIN         1.27
## PWR_DET_PIN        1.0
## Z_UART             1.8

## E0_STEP_PIN        2.13
## E0_DIR_PIN         0.11
## E0_ENABLE_PIN      2.12
## E0_UART            1.4

## E1_STEP_PIN        1.15
## E1_DIR_PIN         1.14
## E1_ENABLE_PIN      1.16
## E1_UART_RX         1.1

## HE1                2.4    
## HE0                2.7
## BED                2.5
## TH1 (H1 Temp)      0.23
## TH0 (H0 Temp)      0.24
## TB  (Bed Temp)     0.25
## FAN                2.3
## SERVO              2.0
## PROBE			  0.10
##===================================================================

[virtual_sdcard]
path: ~/gcode_files
[pause_resume]
[display_status]

##===================================================================

[include debug_macro.cfg]
[include lcd_tweaks.cfg]
[include nozzle_scrub.cfg]
[include cooldown.cfg]
#[include klicky-probe.cfg]

##===================================================================

[mcu]
##	MCU for X/Y/E steppers main MCU
##	[X in X] - B Motor
##	[Y in Y] - A Motor
##	[E in E0] - Extruder
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_lpc1769_09300018A9846AAF8FFE545EC62000F5-if00
##--------------------------------------------------------------------

[mcu z]
##	MCU for Z steppers
##	[Z in X] - Front Left
##	[Z1 in Y] - Rear Left
##	[Z2 in Z] - Rear Right
##	[Z3 in E0]- Front Right
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_lpc1769_1AC0FF0AC0846AAF70CA555EC22000F5-if00
##--------------------------------------------------------------------

[mcu rpi]
##	MCU for RPi4B (Adafruit MAX31865 PT100, Adafruit ADXL345, fan control, lights.
##  Example1: A led strip controlled by the GPIO20 on the RPi
#[output_pin caselight]
#pin: host:gpio20
## You can also write the pin in extended form by specifying the reference gpiochip.
##pin: host:gpiochip0/gpio20
##--------------------------------------------------------------------
serial: /tmp/klipper_host_mcu
##--------------------------------------------------------------------

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 4000    			    #Max 4000
max_accel_to_decel: 2000        #max_accel/2
max_z_velocity: 20 			    #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
# 	X/Y Stepper Settings
#####################################################################

[stepper_x]
##	Connected to X on mcu_xye (B Motor)
step_pin: P2.2
dir_pin: P2.6
enable_pin: !P2.1
rotation_distance: 40
microsteps: 16
full_steps_per_rotation: 400
endstop_pin: P1.29
position_min: 0
position_endstop: 300
position_max: 300
homing_speed: 70                #Max 100
homing_retract_dist: 5
homing_retract_speed: 20
second_homing_speed: 20
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: P1.10
interpolate: True
run_current: 0.95
hold_current: 0.75
sense_resistor: 0.110
stealthchop_threshold: 0

[stepper_y]
##	Connected to Y on mcu_xye (A Motor)
step_pin: P0.19
dir_pin: P0.20
enable_pin: !P2.8
rotation_distance: 40
microsteps: 16
full_steps_per_rotation: 400
endstop_pin: P1.28
position_min: 0
position_endstop: 308
position_max: 308
homing_speed: 70                #Max 100
homing_retract_dist: 5
homing_retract_speed: 20
second_homing_speed: 20
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: P1.9
interpolate: True
run_current: 0.95
hold_current: 0.75
sense_resistor: 0.110
stealthchop_threshold: 0
 
#####################################################################
# 	Z Stepper Settings
#####################################################################

## Z MCU - In X Position
## Z0 Stepper - Front Left
[stepper_z]
step_pin: z:P2.2
dir_pin: z:P2.6
enable_pin: !z:P2.1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16
full_steps_per_rotation: 200
endstop_pin: z:P1.27
position_endstop: -0.150        #Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
                                #(+) value = endstop above Z0, (-) value = endstop below
                                #Increasing position_endstop brings nozzle closer to the bed. After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
position_max: 275
position_min: -2
homing_speed: 10
second_homing_speed: 4
homing_retract_dist: 3

[tmc2209 stepper_z]
uart_pin: z:P1.10
interpolate: true
run_current: 0.95
hold_current: 0.95
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z MCU - In Y Position
##	Z1 Stepper - Rear Left
[stepper_z1]
step_pin: z:P0.19
dir_pin: !z:P0.20
enable_pin: !z:P2.8
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16
full_steps_per_rotation: 200

[tmc2209 stepper_z1]
uart_pin: z:P1.9
interpolate: true
run_current: 0.95
hold_current: 0.95
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z MCU - In Z Position
##	Z2 Stepper - Rear Right
[stepper_z2]
step_pin: z:P0.22
dir_pin: z:P2.11
enable_pin: !z:P0.21
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16
full_steps_per_rotation: 200

[tmc2209 stepper_z2]
uart_pin: z:P1.8
interpolate: true
run_current: 0.95
hold_current: 0.95
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z MCU - In E0 Position
##	Z3 Stepper - Front Right
[stepper_z3]
step_pin: z:P2.13
dir_pin: !z:P0.11
enable_pin: !z:P2.12
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16
full_steps_per_rotation: 200

[tmc2209 stepper_z3]
uart_pin: z:P1.4
interpolate: true
run_current: 0.95
hold_current: 0.95
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
# 	Extruder
#####################################################################

#	E0 on MCU X/Y
[extruder]
step_pin: P2.13
dir_pin: P0.11
enable_pin: !P2.12
rotation_distance: 22.22222         ; rotation_distance = <actual_extrude_distance> / <expected_extrude_distance> * <previous_rotation_distance>
gear_ratio: 50:17				    ; BMG Gear Ratio
microsteps: 16
full_steps_per_rotation: 200
nozzle_diameter: 0.400
filament_diameter: 1.75
max_extrude_only_distance: 100.0
heater_pin: P2.7

sensor_type: MAX31865
sensor_pin: rpi:gpio7
spi_speed: 4000000
spi_software_sclk_pin: rpi:gpio21
spi_software_mosi_pin: rpi:gpio20
spi_software_miso_pin: rpi:gpio19 
rtd_nominal_r: 100
rtd_reference_r: 430 
rtd_num_of_wires: 3

min_temp: 10
max_temp: 300
max_power: 0.8  ##50W heater nerfed to 40W
min_extrude_temp: 170
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
pressure_advance: 0.050
pressure_advance_smooth_time: 0.040

##	E0 on MCU X/Y
[tmc2209 extruder]
uart_pin: P1.4
interpolate: true
run_current: 0.55
hold_current: 0.45
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
# 	Bed Heater
#####################################################################

[heater_bed]
heater_pin: P2.5                            #z:P2.3 (SSR Pin - Z board, Fan Pin)
sensor_type: NTC 100K MGB18-104F39050L32    #NTC 100K beta 3950
sensor_pin: P0.25                           #z:P0.25
max_power: 0.6                              # 600W Heater for 30*30cm bed @ 0.4W/cm^2
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

## 	Thermistor Types
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"

#####################################################################
# 	Probe
#####################################################################

# Inductive probe #
[probe]
pin: ^z:P0.10
x_offset: 0
y_offset: 25.0
z_offset: 0
speed: 5
lift_speed: 10      
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 3

# Klicky probe #
#[probe]
#pin: ^z:P0.10
#x_offset: 0
#y_offset: 19.75
#z_offset = 6.42
#speed: 5
#lift_speed: 10      
#samples: 3
#samples_result: median
#sample_retract_dist: 3.0
#samples_tolerance: 0.006
#samples_tolerance_retries: 3

#####################################################################
# 	Fan Control
#####################################################################

[heater_fan hotend_fan]                     ; Hotend Fan - XYE board, HE1 Connector
pin: P2.4
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
fan_speed: 0.8  #1.0 default                ; If you are experiencing back flow, you can reduce fan_speed

[fan]                                       ; Print Cooling Fan - XYE board, Fan Pin
pin: P2.3
cycle_time: 0.011
kick_start_time: 1.0                        ; (depending on your fan, you may need to increase this value if your fan will not start. Can change cycle_time (increase) if your fan is not able to slow down effectively)
off_below: 0.05 #0.10

[controller_fan electronics_fan]            ; Controller fan - Z board, HE1 Connector
pin: z:P2.4
max_power: 1.0
shutdown_speed: 0
cycle_time: 0.010
kick_start_time: 1.00
fan_speed: 0.5
idle_timeout: 60
heater: heater_bed

[temperature_fan pi_fan]
pin: rpi:gpio18
max_power: 1.0
shutdown_speed: 1.0
cycle_time: 0.011
hardware_pwm: false
kick_start_time: 1.0
off_below: 0.4
sensor_type:temperature_host
control: pid
pid_Kp: 30
pid_Ki: 0.5
pid_Kd: 1
#pid_deriv_time:
#pid_integral_max:
min_temp: 0
max_temp: 80
target_temp: 50.0
max_speed: 1.0
min_speed: .4
gcode_id: H

[fan_generic exhaust_fan]
pin: rpi:gpio26
max_power: 1.0
shutdown_speed: 0.0
cycle_time: 0.010
kick_start_time: 5.0

[fan_generic nevermore]
pin: z:P2.7
max_power: 1.0
shutdown_speed: 0.0
cycle_time: 0.010
kick_start_time: 1.0

#####################################################################
# 	Chamber Temperature
#####################################################################

[thermistor chamber_temp]
temperature1: 25
resistance1: 10000
beta: 3950

[temperature_sensor chamber]
sensor_type: chamber_temp
sensor_pin: P0.23
min_temp: 10
max_temp: 100
gcode_id: C

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

#####################################################################
# 	LED Control
#####################################################################

[output_pin caselight]                      ; Chamber Lighting - Bed Connector (Optional)
pin: z:P2.5
pwm: true
hardware_pwm: true
cycle_time: 0.008333 #0.01666 #equivalent to 60 Hz to match mains voltage, previous was default 0.010
shutdown_value: 0
value: 1

[gcode_macro TOGGLE_CASELIGHT]
gcode:
  SET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}

[gcode_macro lights_on]
gcode:
    SET_PIN PIN=caselight VALUE=1.0

[gcode_macro lights_off]
gcode:
    SET_PIN PIN=caselight VALUE=0.0

#####################################################################
#   ADXL345 Accelerometer (Input Shaper) https://www.klipper3d.org/Measuring_Resonances.html
#####################################################################

[adxl345]
cs_pin: rpi:None
axes_map: z,x,y     #x,y,z

[resonance_tester]
accel_chip: adxl345
probe_points:
    150,150,20

[input_shaper]
shaper_type_x = mzv
shaper_freq_x = 52
shaper_type_y = mzv     
shaper_freq_y = 35

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[safe_z_home]
home_xy_position:207,308
speed:100
z_hop:10
z_hop_speed: 20.0

[quad_gantry_level]
gantry_corners:
    -60,-10
    360,370
    #-60,0
    #360,380 
points:
	50,25
	50,225
	250,225
	250,25
speed: 150
horizontal_move_z: 5
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

[bed_mesh]
speed: 80
horizontal_move_z: 5
mesh_min: 30,30
mesh_max: 270,270
probe_count: 5,5
algorithm: bicubic
relative_reference_index: 12        ; example 7x7: [(7x7)-1] / 2 = 24 or 5x5: [(5x5)-1] / 2 = 12
fade_start: 1
fade_end: 10
fade_target: 0
move_check_distance: 3.0           ; The distance (in mm) along a move to check for split_delta_z. This is also the minimum length that a move can be split. Default is 5.0.
split_delta_z: 0.0125                ; split_delta_z: 0.0125 #The amount of Z difference (in mm) along a move that will trigger a split. Default is .025.
mesh_pps: 4                      ; A comma separated pair of integers (X,Y) defining the number of points per segment to interpolate in the mesh along each axis. A "segment" can be defined as the space between each probedpoint. The user may enter a single value which will be applied to both axes.  Default is 2,2.
bicubic_tension: 0.2               ; When using the bicubic algorithm the tension parameter above may be applied to change the amount of slope interpolated. Larger numbers will increase the amount of slope, which results in more curvature in the mesh. Default is 0.2.

#####################################################################
# 	Display - mini12864
#####################################################################

[mcu menu]
serial: /dev/serial/by-id/usb-Klipper_stm32f042x6_060005001843535936383720-if00
restart_method: command

[display]
display_group: __voron_display
lcd_type: uc1701
kill_pin: !menu:PF0
spi_bus: spi1
cs_pin: menu:PA4
a0_pin: menu:PA2
rst_pin: menu:PA3
contrast: 63
encoder_pins: ^menu:PA0, ^menu:PA1
click_pin: ^!menu:PB1

[output_pin BEEPER_pin]
pin: menu:PF1
pwm: True                               ; A piezo beeper needs a PWM signal, a DC buzzer doesn't.
value: 0                                ; Silent at power on, set to 1 if active low.
shutdown_value: 0                       ; Disable at emergency shutdown (no PWM would be available anyway).
cycle_time: 0.001                       ; Default PWM frequency : 0.001 = 1ms will give a tone of 1kHz although not pitch perfect.
#scale: 1000                            ; Not needed for new M300 macro with conditional statements

[neopixel np]
pin: menu:PA13
chain_count: 3
color_order: RGB
initial_RED: 1.0
initial_GREEN: 1.0
initial_BLUE: 1.0

#####################################################################
# 	GitHub Backup
#####################################################################

[gcode_shell_command backup_cfg]
command: sh /home/pi/autocommit.sh
timeout: 30.
verbose: True

[gcode_macro BACKUP_CFG]
gcode:
    RUN_SHELL_COMMAND CMD=backup_cfg

#####################################################################
# 	Homing/Gantry/Probing Macros
#####################################################################

[gcode_macro G28]
rename_existing: G9928
gcode:
    #Parameters
    {% set config = printer.configfile.settings %}
    {% set z = params.Z|default(1)|int %}
    # Lower Z stepper current (in case of crash)
    SET_TMC_CURRENT STEPPER=stepper_z  CURRENT=0.30 HOLDCURRENT=0.30
    SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT=0.30 HOLDCURRENT=0.30
    SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT=0.30 HOLDCURRENT=0.30
    SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT=0.30 HOLDCURRENT=0.30
    #If Z is specified (G28 Z)
    {% if z == 0 %}
        {% if "xy" not in printer.toolhead.homed_axes %}
            G9928    ; home all
        {% else %}
            G9928 Z ; home z
        {% endif %}
    #If Z is not specified (G28)
    {% else %}
        G9928 ; home all
    {% endif %}
    # Return Z stepper current to configured value
    SET_TMC_CURRENT STEPPER=stepper_z  CURRENT={config["tmc2209 stepper_z"].run_current}  HOLDCURRENT={config["tmc2209 stepper_z"].hold_current}
    SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={config["tmc2209 stepper_z1"].run_current} HOLDCURRENT={config["tmc2209 stepper_z1"].hold_current}
    SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT={config["tmc2209 stepper_z2"].run_current} HOLDCURRENT={config["tmc2209 stepper_z2"].hold_current}
    SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT={config["tmc2209 stepper_z3"].run_current} HOLDCURRENT={config["tmc2209 stepper_z3"].hold_current}
    M400


[gcode_macro _CG28]                ; Conditional G28 (home if not already homed)
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}
	

[gcode_macro G32]
gcode:
    {% set config = printer.configfile.settings %}
    M117 Leveling Gantry
    BED_MESH_CLEAR
    _CG28
    #SET_TMC_CURRENT STEPPER=[stepper_z, stepper_z1, stepper_z2, stepper_z3]  CURRENT=0.30 HOLDCURRENT=0.30
    SET_TMC_CURRENT STEPPER=stepper_z  CURRENT=0.30 HOLDCURRENT=0.30
    SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT=0.30 HOLDCURRENT=0.30
    SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT=0.30 HOLDCURRENT=0.30
    SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT=0.30 HOLDCURRENT=0.30
    SET_VELOCITY_LIMIT ACCEL=500 ACCEL_TO_DECEL=500 SQUARE_CORNER_VELOCITY=1.0
    M400
    QUAD_GANTRY_LEVEL
    SET_TMC_CURRENT STEPPER=stepper_z  CURRENT={config["tmc2209 stepper_z"].run_current}  HOLDCURRENT={config["tmc2209 stepper_z"].hold_current}
    SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={config["tmc2209 stepper_z1"].run_current} HOLDCURRENT={config["tmc2209 stepper_z1"].hold_current}
    SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT={config["tmc2209 stepper_z2"].run_current} HOLDCURRENT={config["tmc2209 stepper_z2"].hold_current}
    SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT={config["tmc2209 stepper_z3"].run_current} HOLDCURRENT={config["tmc2209 stepper_z3"].hold_current}
    SET_VELOCITY_LIMIT ACCEL={config["printer"].max_accel} ACCEL_TO_DECEL={config["printer"].max_accel_to_decel} SQUARE_CORNER_VELOCITY={config["printer"].square_corner_velocity}
    M400
    M117 Gantry Leveled
    G28 Z


[gcode_macro generate_mesh]
gcode:
    {% set config = printer.configfile.settings %}
    _CG28
    M117 Probing bed
    SET_TMC_CURRENT STEPPER=stepper_z  CURRENT=0.30 HOLDCURRENT=0.30
    SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT=0.30 HOLDCURRENT=0.30
    SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT=0.30 HOLDCURRENT=0.30
    SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT=0.30 HOLDCURRENT=0.30
    M400
    BED_MESH_CALIBRATE
    BED_MESH_PROFILE SAVE=CURRENT
    BED_MESH_PROFILE LOAD=CURRENT
    SET_TMC_CURRENT STEPPER=stepper_z  CURRENT={config["tmc2209 stepper_z"].run_current}  HOLDCURRENT={config["tmc2209 stepper_z"].hold_current}
    SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={config["tmc2209 stepper_z1"].run_current} HOLDCURRENT={config["tmc2209 stepper_z1"].hold_current}
    SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT={config["tmc2209 stepper_z2"].run_current} HOLDCURRENT={config["tmc2209 stepper_z2"].hold_current}
    SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT={config["tmc2209 stepper_z3"].run_current} HOLDCURRENT={config["tmc2209 stepper_z3"].hold_current}
    M400
    M117 Mesh complete

#####################################################################
# 	Start/End Print Macros 
#####################################################################

[gcode_macro START_PRINT] 
gcode:
    {% set BED_TEMP = params.BED|int %}
    {% set EXTRUDER_TEMP = params.EXTRUDER|int %}
    {% set SLICER_NOTES = params.NOTES|string %}
    CLEAR_PAUSE
    SET_GCODE_OFFSET Z=0.0         ; Reset the G-Code Z offset (adjust Z offset if needed)
    BED_MESH_CLEAR                 ; Clear Mesh State
    G21                            ; Set units to millimeters
    G90                            ; Use absolute coordinates
    M83                            ; Use relative distances for extrusion
    M107                           ; Turn off part fan
    SET_FAN_SPEED FAN=exhaust_fan SPEED=0.0
    M220 S100                      ; Reset speed to 100%
    M221 S100                      ; Reset flow to 100%
    _CG28                          ; Home if not already homed
    M400
    PARKBED
    M117 Preheating...
    M104 S180                      ; Preheat nozzle
    M190 S{BED_TEMP}               ; Wait for bed to reach first layer temperature
    {% if params.FILAMENT_TYPE != "PLA" %}
        {% if params.FILAMENT_TYPE == "ABS" %}
            {% set CHAMBER_TEMP = params.CHAMBER|default(50)|int %}
            SET_FAN_SPEED FAN=nevermore SPEED=0.9
            M117 ABS: soak to {CHAMBER_TEMP}~degrees~
        {% elif params.FILAMENT_TYPE == "PET" %}
            {% set CHAMBER_TEMP = params.CHAMBER|default(40)|int %}
            M117 PETG: soak to {CHAMBER_TEMP}~degrees~
        {% elif params.FILAMENT_TYPE == "NYLON" %}
            {% set CHAMBER_TEMP = params.CHAMBER|default(60)|int %}
            M117 Nylon: soak to {CHAMBER_TEMP}~degrees~
        {% endif %}
        M106 S255                  ; Set part fan to full
        TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={CHAMBER_TEMP} ; Wait for chamber to reach target temperature
        M106 S64                   ; Set part fan to 25%
        M117 Soak complete
    {% else %}
        M117 Heat soak skipped
    {% endif %}
    M109 S{EXTRUDER_TEMP}          ; Set and wait for nozzle to reach temperature
    G4 P120000                     ; Wait 120s
    G32                            ; QGL
    generate_mesh                  ; Probe bed
    clean_nozzle                   ; Run nozzle purging/cleaning macro
    G28 Z                          ; Home Z with hot nozzle
    PARKBED
    {% if "PA_TUNE" in SLICER_NOTES %}
        SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=1 ACCEL=500 ACCEL_TO_DECEL=500
        TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START=0 FACTOR=.002
    {% endif %}
    M117 Printing...
    UPDATE_DELAYED_GCODE ID=clear_display DURATION=60


[gcode_macro END_PRINT]
gcode:
    {% set axismax = printer.toolhead.axis_maximum        %}
    {% set axismin = printer.toolhead.axis_minimum        %}
    {% set pos     = printer.toolhead.position            %}
    M400                                ; wait for buffer to clear
    G92 E0                              ; zero the extruder
    G1 E-15.0 F3600                     ; retract filament
    G91                                 ; relative positioning
    {% if pos.x <= (axismax.x - 20)   %}
        G0 Z1.00 X20.0 F20000           ; move nozzle to remove stringing
    {% elif pos.x >= (axismin.x + 20) %}
        G0 Z1.00 X-20.0 F20000
    {% endif %}
    G90                                 ; absolute positioning
    {% if pos.z <= (axismax.z - 40) %}
        G1 X{axismax.x - 20} Y{axismax.y - 20} Z{pos.z + 40} F6000
    {% else %}
        G1 X{axismax.x - 20} Y{axismax.y - 20} Z{axismax.z} F6000
    {% endif %}
    TURN_OFF_HEATERS
    BED_MESH_CLEAR
    M107                           ; turn off fan
    M18                            ; Disable motors
    cooldown

#####################################################################
# 	Pause/Resume/Cancel/Filament swap Macros 
#####################################################################

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  END_PRINT
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  BASE_CANCEL_PRINT


[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 12.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  G91
  G1 E-{E} F2100
  G1 Z{z_safe} F900
  G90
  G1 X{x_park} Y{y_park} F6000
  SET_IDLE_TIMEOUT TIMEOUT=43200 ; Set timeout to 12 hours


[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### end of definitions #####
  G91
  G1 E{E} F300   #F2100
  G4 P10000     ; wait 10s for ooze
  RESTORE_GCODE_STATE NAME=PAUSE_state
  BASE_RESUME


[gcode_macro M600]                 ; Filament Change. The print can be resumed with the "RESUME" gcode.
gcode:
    PAUSE
    #{% set X = params.X|default(50)|float %}
    #{% set Y = params.Y|default(0)|float %}
    #{% set Z = params.Z|default(10)|float %}
    #AVE_GCODE_STATE NAME=M600_state
    #PAUSE
    #G91
    #G1 E-.8 F2700
    #G1 Z{Z}
    #G90
    #G1 X{X} Y{Y} F3000
    #G91
    #G1 E-90 F1000
    #RESTORE_GCODE_STATE NAME=M600_state
    #SET_IDLE_TIMEOUT TIMEOUT=43200 ; Set timeout to 12 hours

#####################################################################
# 	Parking Macros 
#####################################################################

[gcode_macro PARKFRONT]
gcode:
    _CG28                                                                                                                          ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90                                                                                                                            ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+10} Z{printer.toolhead.axis_maximum.z/2} F18000      ; park front center, center Z
    RESTORE_GCODE_STATE NAME=PARKFRONT

[gcode_macro PARKFRONTLOW]
gcode:
    _CG28                                                                                                                          ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90                                                                                                                            ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+10} Z50 F18000                                       ; park front center, 50mm up
    RESTORE_GCODE_STATE NAME=PARKFRONT

[gcode_macro PARKREAR]
gcode:
    _CG28                                                                                                                          ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKREAR
    G90                                                                                                                            ; absolute positioning
    G0 X{printer.toolhead.axis_minimum.x+10} Y{printer.toolhead.axis_maximum.y-10} Z{printer.toolhead.axis_maximum.z-50} F18000    ; park top rear left
    RESTORE_GCODE_STATE NAME=PARKREAR

[gcode_macro PARKCENTER]
gcode:
    _CG28                                                                                                                          ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKCENTER
    G90                                                                                                                            ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z{printer.toolhead.axis_maximum.z/2} F18000       ; park center of build volume
    RESTORE_GCODE_STATE NAME=PARKCENTER

[gcode_macro PARKBED]
gcode:
    _CG28                                                                                                                          ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKBED
    G90                                                                                                                            ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z10 F18000                                        ; park 10mm above center of bed
    RESTORE_GCODE_STATE NAME=PARKBED

[gcode_macro PARKLEFT]
gcode:
    _CG28                                                                                                                          ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKLEFT
    G90                                                                                                                            ; absolute positioning
    G0 X{printer.toolhead.axis_minimum.x+50} Y{printer.toolhead.axis_maximum.y/2} Z10 F18000                                       ; park 50mm from left edge of bed (for QGL temp equilibration)
    RESTORE_GCODE_STATE NAME=PARKLEFT


#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh first cold mesh]
#*# version = 1
#*# points =
#*# 	0.090000, 0.090000, 0.117500, 0.115000, 0.087500, 0.082500, 0.065000
#*# 	0.030000, 0.030000, 0.060000, 0.070000, 0.057500, 0.047500, 0.022500
#*# 	0.017500, 0.002500, 0.015000, 0.020000, 0.030000, 0.027500, -0.010000
#*# 	0.025000, -0.012500, -0.012500, 0.000000, 0.010000, 0.015000, -0.037500
#*# 	0.047500, 0.010000, -0.005000, 0.005000, 0.020000, 0.025000, -0.037500
#*# 	0.075000, 0.035000, 0.020000, 0.030000, 0.042500, 0.055000, -0.007500
#*# 	0.087500, 0.052500, 0.052500, 0.052500, 0.067500, 0.075000, 0.015000
#*# tension = 0.2
#*# min_x = 10.0
#*# algo = bicubic
#*# y_count = 7
#*# mesh_y_pps = 4
#*# min_y = 30.0
#*# x_count = 7
#*# max_y = 270.0
#*# mesh_x_pps = 4
#*# max_x = 289.96
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 24.465
#*# pid_ki = 1.294
#*# pid_kd = 115.595
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 37.736
#*# pid_ki = 1.471
#*# pid_kd = 241.982
#*#
#*# [bed_mesh first hot mesh]
#*# version = 1
#*# points =
#*# 	0.085000, 0.082500, 0.110000, 0.107500, 0.082500, 0.072500, 0.050000
#*# 	0.032500, 0.030000, 0.065000, 0.070000, 0.055000, 0.042500, 0.010000
#*# 	0.027500, 0.007500, 0.027500, 0.022500, 0.025000, 0.022500, -0.025000
#*# 	0.032500, -0.007500, -0.005000, 0.000000, 0.002500, 0.007500, -0.057500
#*# 	0.055000, 0.015000, -0.000000, 0.007500, 0.015000, 0.017500, -0.057500
#*# 	0.065000, 0.027500, 0.012500, 0.025000, 0.030000, 0.040000, -0.032500
#*# 	0.072500, 0.040000, 0.040000, 0.047500, 0.055000, 0.062500, -0.005000
#*# tension = 0.2
#*# mesh_x_pps = 4
#*# algo = bicubic
#*# min_x = 10.0
#*# min_y = 30.0
#*# y_count = 7
#*# mesh_y_pps = 4
#*# x_count = 7
#*# max_x = 289.96
#*# max_y = 270.0
#*#
#*# [bed_mesh first enclosed mesh]
#*# version = 1
#*# points =
#*# 	0.115000, 0.117500, 0.137500, 0.132500, 0.107500, 0.092500, -0.010000
#*# 	0.097500, 0.070000, 0.087500, 0.085000, 0.077500, 0.080000, 0.067500
#*# 	0.080000, 0.037500, 0.042500, 0.030000, 0.042500, 0.057500, 0.037500
#*# 	0.080000, 0.015000, -0.000000, 0.000000, 0.012500, 0.035000, 0.000000
#*# 	0.105000, 0.040000, 0.007500, 0.010000, 0.022500, 0.045000, -0.005000
#*# 	0.125000, 0.060000, 0.030000, 0.035000, 0.047500, 0.075000, 0.025000
#*# 	0.152500, 0.090000, 0.072500, 0.067500, 0.080000, 0.100000, 0.052500
#*# tension = 0.2
#*# min_x = 10.0
#*# algo = bicubic
#*# y_count = 7
#*# mesh_y_pps = 4
#*# min_y = 30.0
#*# x_count = 7
#*# max_y = 270.0
#*# mesh_x_pps = 4
#*# max_x = 289.96
#*#
#*# [bed_mesh 1]
#*# version = 1
#*# points =
#*# 	0.145000, 0.132500, 0.155000, 0.147500, 0.125000, 0.122500, 0.100000
#*# 	0.077500, 0.067500, 0.092500, 0.097500, 0.085000, 0.082500, 0.060000
#*# 	0.060000, 0.027500, 0.037500, 0.032500, 0.040000, 0.050000, 0.015000
#*# 	0.052500, -0.000000, -0.005000, 0.000000, 0.010000, 0.025000, -0.020000
#*# 	0.075000, 0.022500, -0.002500, 0.007500, 0.017500, 0.032500, -0.030000
#*# 	0.092500, 0.042500, 0.022500, 0.035000, 0.042500, 0.062500, 0.002500
#*# 	0.117500, 0.075000, 0.065000, 0.070000, 0.077500, 0.090000, 0.032500
#*# tension = 0.2
#*# min_x = 10.0
#*# algo = bicubic
#*# y_count = 7
#*# mesh_y_pps = 4
#*# min_y = 30.0
#*# x_count = 7
#*# max_y = 270.0
#*# mesh_x_pps = 4
#*# max_x = 289.96
#*#
#*# [bed_mesh enclosed mesh after rebuild]
#*# version = 1
#*# points =
#*# 	0.110000, 0.105000, 0.105000, 0.072500, 0.072500
#*# 	0.045000, 0.042500, 0.052500, 0.037500, 0.012500
#*# 	0.062500, 0.015000, 0.000000, -0.000000, -0.047500
#*# 	0.077500, 0.022500, 0.020000, 0.022500, -0.025000
#*# 	0.110000, 0.070000, 0.062500, 0.062500, 0.007500
#*# tension = 0.2
#*# min_x = 10.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 4
#*# min_y = 30.0
#*# x_count = 5
#*# max_y = 270.0
#*# mesh_x_pps = 4
#*# max_x = 290.0
#*#
#*# [bed_mesh enclosed mesh after 2nd rebuild (with extrusion swaps)]
#*# version = 1
#*# points =
#*# 	0.222500, 0.182500, 0.175000, 0.160000, 0.187500
#*# 	0.120000, 0.075000, 0.075000, 0.075000, 0.082500
#*# 	0.110000, 0.025000, 0.000000, 0.017500, 0.005000
#*# 	0.152500, 0.057500, 0.040000, 0.060000, 0.042500
#*# 	0.225000, 0.152500, 0.130000, 0.150000, 0.132500
#*# tension = 0.2
#*# min_x = 10.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 4
#*# min_y = 30.0
#*# x_count = 5
#*# max_y = 270.0
#*# mesh_x_pps = 4
#*# max_x = 290.0
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.190000, 0.182500, 0.172500, 0.162500, 0.195000
#*# 	0.102500, 0.077500, 0.070000, 0.075000, 0.097500
#*# 	0.077500, 0.022500, 0.000000, 0.017500, 0.032500
#*# 	0.122500, 0.050000, 0.040000, 0.055000, 0.072500
#*# 	0.202500, 0.150000, 0.135000, 0.145000, 0.157500
#*# tension = 0.2
#*# min_x = 30.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 4
#*# min_y = 30.0
#*# x_count = 5
#*# max_y = 270.0
#*# mesh_x_pps = 4
#*# max_x = 270.0
#*#
#*# [bed_mesh Heat soak mesh after pins mod]
#*# version = 1
#*# points =
#*# 	0.190000, 0.182500, 0.172500, 0.162500, 0.195000
#*# 	0.102500, 0.077500, 0.070000, 0.075000, 0.097500
#*# 	0.077500, 0.022500, 0.000000, 0.017500, 0.032500
#*# 	0.122500, 0.050000, 0.040000, 0.055000, 0.072500
#*# 	0.202500, 0.150000, 0.135000, 0.145000, 0.157500
#*# tension = 0.2
#*# min_x = 30.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 4
#*# min_y = 30.0
#*# x_count = 5
#*# max_y = 270.0
#*# mesh_x_pps = 4
#*# max_x = 270.0
