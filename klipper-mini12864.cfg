[mcu menu]
serial: /dev/serial/by-id/usb-Klipper_stm32f042x6_060005001843535936383720-if00
restart_method: command

[display]
lcd_type: uc1701
kill_pin: !menu:PF0
spi_bus: spi1
cs_pin: menu:PA4
a0_pin: menu:PA2
rst_pin: menu:PA3
contrast: 63
encoder_pins: ^menu:PA0, ^menu:PA1
click_pin: ^!menu:PB1

[output_pin BEEPER_pin]
pin: menu:PF1
pwm: True
value: 0
shutdown_value: 0
cycle_time: 0.001
scale: 1000
 
[gcode_macro M300]
default_parameter_S=1000
default_parameter_P=100
gcode:  SET_PIN PIN=BEEPER_pin VALUE={S}
        G4 P{P}
        SET_PIN PIN=BEEPER_pin VALUE=0


[neopixel np]
pin: menu:PA13
chain_count: 3
color_order: RGB
initial_RED: 1.0
initial_GREEN: 1.0
initial_BLUE: 1.0

################################
## Display Menu Modifications ##
################################

[menu __main __octoprint]
type: list
name: Fluidd

[menu __main __octoprint __pause]
type: command
enable: {printer.idle_timeout.state == "Printing"}
name: Pause
gcode:
    PAUSE

[menu __main __octoprint __resume]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Resume
gcode:
    RESUME

[menu __main __octoprint __abort]
type: command
enable: {printer.idle_timeout.state == "Printing"}
name: Cancel
gcode:
    CANCEL_PRINT

[menu __main __sdcard]
type: disabled

[menu __main __tune __offsetz]
type: input
name: Offset Z:{'%05.3f' % menu.input}
index: 0
input: {printer.gcode_move.homing_origin.z}
input_min: -5
input_max: 5
input_step: 0.005
realtime: True
gcode:
    SET_GCODE_OFFSET Z={'%.3f' % menu.input} MOVE=1

[menu __main __control __gantrylvl]
type: command
name: Level Gantry
index: 4
gcode:
    G32

[menu __main __control __fanonoff]
type: disabled#input
#enable: {'fan' in printer}
#name: Fan: {'ON ' if menu.input else 'OFF'}
#input: {printer.fan.speed}
#input_min: 0
#input_max: 1
#input_step: 1
#gcode:
#    M106 S{255 if menu.input else 0}

[menu __main __control __fanspeed]
type: input
enable: {'fan' in printer}
name: Fan speed: {'%3d' % (menu.input*100)}%
input: {printer.fan.speed}
input_min: 0
input_max: 1
input_step: 0.05
gcode:
    M106 S{'%d' % (menu.input*255)}

[menu __main __control __caselightonoff]
type: command#input
enable: {'output_pin caselight' in printer}
#name: Lights: {'ON ' if menu.input else 'OFF'}
name: Lights: {'OFF' if (printer['output_pin caselight'].value==0) else 'ON '}
#input: {printer['output_pin caselight'].value}
#input_min: 0
#input_max: 1
#input_step: 1
gcode:
    #SET_PIN PIN=caselight VALUE={1 if menu.input else 0}
    SET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}

[menu __main __control __caselightpwm]
type: input
enable: {'output_pin caselight' in printer}
name: Lights: {'%3d' % (menu.input*100)}%
input: {printer['output_pin caselight'].value}
input_min: 0.0
input_max: 1.0
input_step: 0.10#0.01
gcode:
    SET_PIN PIN=caselight VALUE={menu.input}

[menu __main __setup __calib]
type: disabled

[menu __main __setup __tuning __hotend_pid_tuning]
type: command
enable: {(not printer.idle_timeout.state == "Printing") and ('extruder' in printer)}
name: ABS - Tune Hotend PID
gcode: PID_CALIBRATE HEATER=extruder TARGET=245 WRITE_FILE=1

[menu __main __setup __tuning __hotbed_pid_tuning]
type: command
enable: {(not printer.idle_timeout.state == "Printing") and ('heater_bed' in printer)}
name: ABS - Tune Bed PID
gcode: PID_CALIBRATE HEATER=heater_bed TARGET=105 WRITE_FILE=1